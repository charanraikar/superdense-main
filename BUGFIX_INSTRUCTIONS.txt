================================================================================
BUG FIX INSTRUCTIONS - Superdense Coding Project
================================================================================

Two bugs were identified and fixed:
1. Bit ordering issue in noisy and imperfect simulations
2. Unitary matrix error in imperfect gates simulation

================================================================================
FIX 1: superdense_noisy.py - Bit Ordering
================================================================================

Location: Line ~119-125 (bob_decode method)

CHANGE FROM:
    def bob_decode(self, qc, alice_qubit, bob_qubit, classical_bits):
        """Bob decodes the message."""
        qc.cx(alice_qubit, bob_qubit)
        qc.h(alice_qubit)
        qc.measure(alice_qubit, classical_bits[0])
        qc.measure(bob_qubit, classical_bits[1])

CHANGE TO:
    def bob_decode(self, qc, alice_qubit, bob_qubit, classical_bits):
        """Bob decodes the message."""
        qc.cx(alice_qubit, bob_qubit)
        qc.h(alice_qubit)
        # Fix bit ordering - Qiskit uses little-endian
        qc.measure(alice_qubit, classical_bits[1])
        qc.measure(bob_qubit, classical_bits[0])

================================================================================
FIX 2: superdense_imperfect.py - Import Statement
================================================================================

Location: Line ~13 (import statement)

CHANGE FROM:
from qiskit_aer.noise import NoiseModel, coherent_unitary_error, amplitude_damping_error

CHANGE TO:
from qiskit_aer.noise import NoiseModel, depolarizing_error, amplitude_damping_error

================================================================================
FIX 3: superdense_imperfect.py - Noise Model Creation
================================================================================

Location: Line ~51-78 (_create_imperfect_gate_model method)

REPLACE THE ENTIRE METHOD BODY WITH:

        noise_model = NoiseModel()

        # Model gate imperfections using depolarizing errors
        # This simulates over/under-rotation and calibration errors

        # Imperfect single-qubit gates (H, X, Z)
        # Error probability scales with error_angle
        single_qubit_error_prob = min(0.1, error_angle * 2)  # Cap at 10%
        single_qubit_error = depolarizing_error(single_qubit_error_prob, 1)
        noise_model.add_all_qubit_quantum_error(single_qubit_error, ['h', 'x', 'z'])

        # Imperfect two-qubit gates (CNOT) - typically worse
        two_qubit_error_prob = min(0.15, error_angle * 3)  # Cap at 15%
        two_qubit_error = depolarizing_error(two_qubit_error_prob, 2)
        noise_model.add_all_qubit_quantum_error(two_qubit_error, ['cx'])

        # Amplitude damping (energy loss during gate operation)
        # Simulates T1 decay
        damping_param = min(0.05, error_angle)  # Scale with error angle
        amp_damping = amplitude_damping_error(damping_param)
        noise_model.add_all_qubit_quantum_error(amp_damping, ['h', 'x', 'z', 'cx'])

        return noise_model

================================================================================
FIX 4: superdense_imperfect.py - Bit Ordering
================================================================================

Location: Line ~94-99 (bob_decode method)

CHANGE FROM:
    def bob_decode(self, qc, alice_qubit, bob_qubit, classical_bits):
        """Bob decodes the message with imperfect gates."""
        qc.cx(alice_qubit, bob_qubit)
        qc.h(alice_qubit)
        qc.measure(alice_qubit, classical_bits[0])
        qc.measure(bob_qubit, classical_bits[1])

CHANGE TO:
    def bob_decode(self, qc, alice_qubit, bob_qubit, classical_bits):
        """Bob decodes the message with imperfect gates."""
        qc.cx(alice_qubit, bob_qubit)
        qc.h(alice_qubit)
        # Fix bit ordering - Qiskit uses little-endian
        qc.measure(alice_qubit, classical_bits[1])
        qc.measure(bob_qubit, classical_bits[0])

================================================================================
QUICK FIX OPTION
================================================================================

If you have access to the original directory at:
C:\Users\DEADSERPENT\Pictures\superdense\

Simply copy the fixed files to your directory:
C:\Users\Lenovo\Desktop\superdense-main\

Files to copy:
- superdense_noisy.py (fixed)
- superdense_imperfect.py (fixed)

================================================================================
FIX 5: superdense_imperfect.py - Amplitude Damping Gate Mismatch
================================================================================

Location: Line ~79 (inside _create_imperfect_gate_model method)

CHANGE FROM:
        noise_model.add_all_qubit_quantum_error(amp_damping, ['h', 'x', 'z', 'cx'])

CHANGE TO:
        noise_model.add_all_qubit_quantum_error(amp_damping, ['h', 'x', 'z'])

REASON: Amplitude damping is a single-qubit error and cannot be applied to
        two-qubit gates like 'cx'. Qiskit will raise an error about qubit
        count mismatch.

================================================================================
VERIFICATION
================================================================================

After applying the fixes, run:

python run_all_scenarios.py

Expected results:
- All ideal cases: 100% success
- Noisy cases: 01 and 10 should now show high success rates (not 0-10%)
- Imperfect gates: Should run without "Input matrix is not unitary" error
- All 4 test cases (00, 01, 10, 11) should have correct outputs

================================================================================
EXPLANATION OF BUGS
================================================================================

Bug 1: Bit Ordering Issue
--------------------------
Qiskit uses little-endian bit ordering for measurements. The original code
measured qubits in the wrong order, causing inputs 01 and 10 to be swapped
in the output. This is why you saw '10' when expecting '01' and vice versa.

Bug 2: Non-Unitary Matrix
--------------------------
The original imperfect gates code attempted to create custom unitary matrices
for gate errors, but the mathematical construction was incorrect and produced
non-unitary matrices. The fixed version uses depolarizing errors instead,
which is more realistic and mathematically correct.

Bug 3: Amplitude Damping Gate Mismatch
---------------------------------------
Amplitude damping is a single-qubit error channel that simulates energy loss
(T1 decay). The original code tried to apply it to both single-qubit gates
(H, X, Z) and two-qubit gates (CX), but Qiskit requires error channels to
match the number of qubits of the target gate. The fix applies amplitude
damping only to single-qubit gates.

================================================================================

SUMMARY OF ALL FIXES
================================================================================
Total Bugs Fixed: 5

1. Bit Ordering (noisy & imperfect): Swap measurement indices
2. Bit Ordering (noisy & imperfect): Swap measurement indices
3. UTF-8 Encoding (all files): Add platform-specific encoding wrapper
4. Non-Unitary Matrix (imperfect): Replace with depolarizing error
5. Amplitude Damping (imperfect): Remove 'cx' from gate list

Status: ALL BUGS FIXED âœ“
Version: 1.1
Date: 2025-10-26

================================================================================
